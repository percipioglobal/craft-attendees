<?php

namespace percipiolondon\attendees\elements\db;

use craft\elements\db\ElementQuery;

class AttendeeQuery extends ElementQuery
{
    public $siteId;
    public $name;
    public $email;
    public $jobRole;
    public $days;
    public $newsletter;
    public $orgName;
    public $orgUrn;
    public $postCode;
    public $eventId;
    public $approved;

    public function __construct($elementType, array $config = [])
    {
        parent::__construct($elementType, $config);
    }

    public function name($value)
    {
        $this->name = $value;
        return $this;
    }

    public function email($value)
    {
        $this->email = $value;
        return $this;
    }

    public function jobRole($value)
    {
        $this->jobRole = $value;
        return $this;
    }

    public function days($value)
    {
        $this->days = $value;
        return $this;
    }

    public function newsletter($value)
    {
        $this->newsletter = $value;
        return $this;
    }

    public function orgName($value)
    {
        $this->orgName = $value;
        return $this;
    }

    public function orgUrn($value)
    {
        $this->orgUrn = $value;
        return $this;
    }

    public function postCode($value)
    {
        $this->postCode = $value;
        return $this;
    }

    public function eventId($value)
    {
        $this->eventId = $value;
        return $this;
    }

    public function approved($value)
    {
        $this->approved = $value;
        return $this;
    }

    protected function beforePrepare(): bool
    {
        $this->joinElementTable('attendees_attendees');

        $this->query->select([
            'attendees_attendees.name',
            'attendees_attendees.email',
            'attendees_attendees.jobRole',
            'attendees_attendees.days',
            'attendees_attendees.newsletter',
            'attendees_attendees.orgName',
            'attendees_attendees.orgUrn',
            'attendees_attendees.postCode',
            'attendees_attendees.eventId',
            'attendees_attendees.approved',
        ]);

        return parent::beforePrepare(); // TODO: Change the autogenerated stub
    }
}
